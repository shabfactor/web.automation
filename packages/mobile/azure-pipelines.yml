trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run tests
  displayName: 'npm install and build'

- script: |
    npm pack
  displayName: 'Package for npm release'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '*.tgz' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy npm package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy package.json'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
    artifactName: npm
  displayName: 'Publish npm artifact'

# variables:
#   displayName: 'Setup Sauce Environment variable'
#   user: $(SAUCE_USERNAME)
#   key: $(SAUCE_ACCESS_KEY)  
- task: PowerShell@2
  displayName: 'Set Sauce Environment Variables'
  inputs:
    targetType: filePath
    filePath: ./wdio.conf.ts
    arguments: '$env:SAUCE_USER $env:SAUCE_KEY'

# Using powershell ##vso command to set an environment variable in the system
- powershell: |
   Write-Host "Sauce Username stored in ADO variables is=>$($env:SAUCE_USER)";
   Write-Host "Sauce Access Key stored in ADO variables is=>$($env:SAUCE_KEY)";
   Write-Host "Sauce Username stored in Env variables is=>$($env:SAUCE_USERNAME)";
   Write-Host "Sauce Access Key stored in Env variables is=>$($env:SAUCE_ACCESS_KEY)";
   Write-Host "Sauce Build Repository URI stored in Env variables is=>$($env:BUILD_REPOSITORY_URI)";

#checking to make sure that env variables were set between yml tasks
- powershell: |
   Write-Host "Sauce Username stored in Env Variables variables is=>$($env:SAUCE_USERNAME)";
   Write-Host "Sauce Access Key stored in ADO variables is=>$($env:SAUCE_ACCESS_KEY)";
  displayName: display env variables bw posh tasks